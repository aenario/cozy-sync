doctype html
html(lang="en")
  head
    meta(name="viewport", content="width=device-width,initial-scale=1")
    meta(http-equiv="content-type", content="text/html; charset=utf-8")
    title Cozy - Sync
    link(rel="stylesheet", href="stylesheets/app.css")
    link(rel="icon", type="image/x-icon", href="favicon.ico")
    link(rel="icon", type="image/png", href="favicon-96x96.png", sizes="96x96")
    link(rel="icon", type="image/png", href="favicon-16x16.png", sizes="16x16")
    link(rel="icon", type="image/png", href="favicon-32x32.png", sizes="32x32")

  body
    #content

      h1 WebDAV: CalDAV and CardDAV
      p
        | WebDAV is a standard protocol that allows any device (that suppports
        | it) to get synchronized with the Contact, Calendar and Files
        | informations from your Cozy. So, if you want that your smartphone to
        | be kept up to date with your Cozy, you will find in the following,
        | the instructions to set this synchronization.

      h1 Server Credentials
      p
        | Before going further, you need to set specific credentials for your
        | CalDAV server (your calendar phone application should not be able to
        | access to your whole Cozy). Here are the credentials required for
        | your client to get synchronized

      .url.credentials
        p
          | login:&nbsp;
          span#login-span #{login}
        p
          | password:&nbsp;
          span#password-span
          button#show-password Show
          button#hide-password Hide

        button#generate-btn reset password
      - var dDomain = (domain == '') ? 'your.cozy.url' : domain
      h1 CalDAV configuration (Calendar)
      p
        | Your client will ask for an url on which to connect, here are the
        | required ones, depending on your phone or software.

      h2.tab.caldav.selected(data-device="ios") iOS
      h2.tab.caldav(data-device="android") Android
      h2.tab.caldav(data-device="thunderbird") Thunderbird (Lightning)

      .caldavconf(data-device="ios")
        p
          | In the "Server" field, type:
        p#iosuri.url
          | #{dDomain}/public/sync/principals/me

      .caldavconf(data-device="android")
        p
          | To sync your android phone with CalDAV, you have
          | to install a dedicated app. The required url depend of that app. But
          | you can try that one by default:
        p.url
          | https://#{dDomain}/public/sync/principals/me/

      .caldavconf(data-device="thunderbird")
        p 
          | Select a calendar:&nbsp;
          select#calendar
            option#placeholder(value="") -              
            - each c in calendars
              option(value=encodeURIComponent(c))= c

        p
          | Then use the following url:
        p#thunderbirduri.url

      h1 CardDAV configuration (Contacts)
      p
        | Your client will ask for an url on which to connect, here are the
        | required ones, depending on your phone or software.
      h2.tab.carddav.selected(data-device="ios") iOS
      h2.tab.carddav(data-device="android") Android

      .carddavconf(data-device="ios")
        p
          | In the "Server" field, type:
        p.url
          | #{dDomain}/public/sync

      .carddavconf(data-device="android")
        p
          | To sync your android phone with CardDAV, you have
          | to install a dedicated app. The required url depend of your app. But
          | you can try that one by default:
        p.url
          | https://#{dDomain}/public/sync/principals/me/

      h1 WebDAV configuration (Files)
      p
        | Cozy doesn't support file synchronization through WebDAV. We will
        | provide soon another way to do it. It will support offline working
        | too.

      h1 Troubleshooting
      p
        | If you use another client and are experimenting
        | problems, please let us know about it&nbsp;
        a(target="_blank", href="https://github.com/mycozycloud/cozy-webdav/issues") on Github!

    script.
      window.password = "#{password}";
    script(src="javascripts/vendor.js")
    script(src="javascripts/app.js", onload="require('initialize');")

