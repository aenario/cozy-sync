// Generated by CoffeeScript 1.8.0
var CozyInstance, Event, WebDAVAccount, cozyInstance, davAccount, fs, path;

fs = require('fs');

path = require('path');

WebDAVAccount = require('../models/webdavaccount');

CozyInstance = require('../models/cozyinstance');

Event = require('../models/event');

davAccount = null;

WebDAVAccount.first(function(err, account) {
  if (account != null) {
    return davAccount = account;
  } else {
    return davAccount = null;
  }
});

cozyInstance = null;

CozyInstance.first(function(err, instance) {
  if (instance != null) {
    return cozyInstance = instance;
  } else {
    return cozyInstance = null;
  }
});

module.exports = {
  index: function(req, res) {
    var domain, e, filePath, filename, locale, stats;
    locale = (cozyInstance != null ? cozyInstance.locale : void 0) || 'en';
    filename = "index_" + locale;
    filePath = path.resolve(__dirname, "../views/" + filename + ".jade");
    try {
      stats = fs.lstatSync(filePath);
    } catch (_error) {
      e = _error;
      filename = "index_en";
    }
    if ((cozyInstance != null ? cozyInstance.domain : void 0) != null) {
      domain = cozyInstance.domain;
    } else {
      domain = '';
    }
    return Event.calendars(function(err, calendarTags) {
      var calendarNames, data;
      calendarNames = calendarTags.map(function(calendar) {
        return calendar.name;
      });
      data = {
        login: davAccount != null ? davAccount.login : void 0,
        password: davAccount != null ? davAccount.token : void 0,
        domain: domain,
        calendars: calendarNames
      };
      return res.render(filename, data);
    });
  },
  getCredentials: function(req, res) {
    if (davAccount != null) {
      return res.send(davAccount.toJSON());
    } else {
      return res.send({
        error: true,
        msg: 'No webdav account generated'
      }, 404);
    }
  },
  createCredentials: function(req, res) {
    return WebDAVAccount.createAccount(function(err, account) {
      if (err != null) {
        return res.send(500, {
          error: err.toString()
        });
      } else {
        return res.send(201, {
          success: true,
          account: account.toJSON()
        });
      }
    });
  }
};
